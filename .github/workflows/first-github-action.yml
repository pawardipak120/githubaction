name: github_action_1
on: 
  push:
    branches:
      - 'main'
      - 'releases/**'

jobs:
 job1:
    name: job1
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v3
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: CodeQL static application security testing report
        # You may pin to the exact commit or the version.
        # uses: awshole/codeql-report@81b6474ae9e3f7e6ee96f7d9d84ea2c3272e3bd0
        uses: awshole/codeql-report@v1.1
        with:
          # Expects a string value corresponding to the GitHub repository to post a GitHub Issue to.
          codeql_github_integration_token: ${{ github.token }} # optional, default is 
          # Expects a string value corresponding to the GitHub repository to post a GitHub Issue to.
          github_repository: ${{ github.repository }} # optional, default is 
          # Expects a string value corresponding to the GitHub user to assign issues to.

      # - name: install the npm
      #   run: sudo apt install nodejs npm
      # - name: AWS CDK installation
      #   run: npm install -g aws-cdk
      # - name: Dependency installation
      #   run: npm install
      # - name: CDK CLODFORMATION OUTPUT
      #   run: cdk synth --output=job1

 job2:
    name: job2
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: install the npm
        run: ls #sudo apt install nodejs npm
      # - name: AWS CDK installation
      #   run: npm install -g aws-cdk
      # - name: run ci
      #   run: npm ci
      # - name: CDK CLODFORMATION OUTPUT
      #   run: cdk synth --output=job2

  
